<UserControl x:Class="LeveragingIocInWpf.Views.EmployeeRegistrationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LeveragingIocInWpf.Views"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate_WizardButton">
            <StackPanel Margin="5" Orientation="Horizontal" HorizontalAlignment="Right"/>
        </ItemsPanelTemplate>
        <ItemsPanelTemplate x:Key="WizardHeaderItemsPanelTemplate">
            <UniformGrid Rows="1" />
        </ItemsPanelTemplate>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <StackPanel>
                            <TextBlock x:Name="tb" Text="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14.667" Foreground="#FFFE6959" Margin="0,10,0,5"/>
                            <Border x:Name="btn" Width="Auto" Margin="5" Background="#FFFE6959" BorderBrush="{x:Null}" BorderThickness="0" Height="5"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="btn" Value="#FE6959"/>
                                <Setter Property="Foreground" TargetName="tb" Value="#FE6959"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Background" TargetName="btn" Value="#7D7E7E"/>
                                <Setter Property="Foreground" TargetName="tb" Value="#7D7E7E"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="btn" Value="#FE6959"/>
                                <Setter Property="Foreground" TargetName="tb" Value="#FE6959"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="btn" Value="#FE6959"/>
                                <Setter Property="Foreground" TargetName="tb" Value="#FE6959"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="btn" Value="#7D7E7E"/>
                                <Setter Property="Foreground" TargetName="tb" Value="#7D7E7E"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WizardListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <ToggleButton Foreground="White" Content="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" HorizontalAlignment="Left" Height="40" VerticalAlignment="Top" Width="90" Background="#FF284159" BorderBrush="#FF3A5B7A" Style="{DynamicResource ToggleButtonStyle}" FontFamily="Segoe UI Light" FontSize="18.667"/>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <StackPanel>
                            <RadioButton Content="ToggleButton" Style="{DynamicResource ToggleButtonStyle1}" IsHitTestVisible="False" IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="60"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="White">
            <Grid.RowDefinitions>
                <RowDefinition Height="90"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Margin="10,5" VerticalAlignment="Center">
                <ListBox Name="lbWizard" ItemsSource="{Binding WizardInfoList}" SelectedItem="{Binding SelectedWizardInfo}" Background="#E3E6E7" SelectionMode="Single" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" ItemsPanel="{DynamicResource WizardHeaderItemsPanelTemplate}"/>
            </Grid>
            <Grid x:Name="WizardContainer" Margin="10,5" Grid.Row="2" />
        </Grid>
        <Grid Grid.Row="1" >
            <ListBox Name="lbBtns" BorderThickness="0" SelectedIndex="{Binding WizardButtonIndex}" SelectionMode="Single" ItemsPanel="{DynamicResource ItemsPanelTemplate_WizardButton}" Height="60" VerticalAlignment="Top">
                <ListViewItem Content="Previous" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5" Width="90" Height="40" BorderThickness="1" BorderBrush="Black" Style="{DynamicResource WizardListViewItemStyle}"/>
                <ListViewItem Content="{Binding NextButtonText}" IsSelected="True" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5" Width="90" Height="40" BorderThickness="1" BorderBrush="Black" Style="{DynamicResource WizardListViewItemStyle}"/>
                <ListViewItem Content="Cancel" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5" Width="90" Height="40" BorderThickness="1" BorderBrush="Black" Style="{DynamicResource WizardListViewItemStyle}"/>
            </ListBox>
        </Grid>
    </Grid>
</UserControl>
